{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/janela-modal/janela-modal.component.ts","./src/app/components/janela-modal/janela-modal.component.html","./src/app/components/salvar-lista/salvar-lista.component.ts","./src/app/components/salvar-lista/salvar-lista.component.html","./src/app/components/snack-bar/snack-bar.component.ts","./src/app/components/snack-bar/snack-bar.component.html","./src/app/models/descricao.class.ts","./src/app/models/produto.class.ts","./src/app/pages/lista-de-compras/listaDeCompras/lista-de-compras.component.ts","./src/app/pages/lista-de-compras/listaDeCompras/lista-de-compras.component.html","./src/app/pages/lista-de-compras/tabela-produtos/tabela-produtos.component.ts","./src/app/pages/lista-de-compras/tabela-produtos/tabela-produtos.component.html","./src/app/pages/listas-salvas/lista-icone/lista-icone.component.ts","./src/app/pages/listas-salvas/lista-icone/lista-icone.component.html","./src/app/pages/listas-salvas/listas-salvas.component.ts","./src/app/pages/listas-salvas/listas-salvas.component.html","./src/app/pages/modoMercado/modo-mercado/modo-mercado.component.ts","./src/app/pages/modoMercado/modo-mercado/modo-mercado.component.html","./src/app/services/produto.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListaDeComprasComponent } from './pages/lista-de-compras/listaDeCompras/lista-de-compras.component';\nimport { ListasSalvasComponent } from './pages/listas-salvas/listas-salvas.component';\nimport { ModoMercadoComponent } from './pages/modoMercado/modo-mercado/modo-mercado.component';\n\n\nconst routes: Routes = [\n  { path:'novaLista', component: ListaDeComprasComponent, title: \"Nova Lista\"},\n  { path:'', component: ListasSalvasComponent, title: \"Pagina Inicial\"},\n  { path:'editarLista/:nomeLista', component: ListaDeComprasComponent, title: \"Editar Lista\"},\n  { path:'modoMercado/:nomeLista', component: ModoMercadoComponent, title: \"Modo Mercado\"},\n\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ListaCompras';\n}\n","<body>\r\n            <app-header id=\"header\"></app-header>\r\n      \r\n                  <section id=\"conteudo\">\r\n                        <router-outlet></router-outlet>\r\n                  </section>\r\n      \r\n            <app-footer id=\"footer\"></app-footer>\r\n      \r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent} from \"./components/header/header.component\"\r\nimport { FooterComponent} from \"./components/footer/footer.component\"\r\nimport { ListaDeComprasComponent} from \"./pages/lista-de-compras/listaDeCompras/lista-de-compras.component\"\r\nimport { TabelaProdutosComponent } from './pages/lista-de-compras/tabela-produtos/tabela-produtos.component';\r\nimport { ListasSalvasComponent } from './pages/listas-salvas/listas-salvas.component'\r\nimport { ListaIconeComponent } from './pages/listas-salvas/lista-icone/lista-icone.component';\r\nimport { SalvarListaComponent } from './components/salvar-lista/salvar-lista.component';\r\nimport { SnackBarComponent } from './components/snack-bar/snack-bar.component';\r\nimport { JanelaModalComponent } from './components/janela-modal/janela-modal.component';\r\nimport { ModoMercadoComponent } from './pages/modoMercado/modo-mercado/modo-mercado.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\n\r\nimport { MatIconModule} from '@angular/material/icon'\r\nimport { MatCardModule } from '@angular/material/card'\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\r\nimport { MatToolbarModule} from '@angular/material/toolbar'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatFormFieldModule} from '@angular/material/form-field'\r\nimport { MatButtonModule} from '@angular/material/button'\r\nimport { MatTableModule} from '@angular/material/table'\r\nimport { MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox'\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ListaDeComprasComponent,\r\n    TabelaProdutosComponent,\r\n    ListasSalvasComponent,\r\n    ListaIconeComponent,\r\n    SalvarListaComponent,\r\n    SnackBarComponent,\r\n    JanelaModalComponent,\r\n    ModoMercadoComponent,\r\n  \r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    // Angular Material\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatCheckboxModule\r\n    \r\n    \r\n  ],\r\n  entryComponents: [ SalvarListaComponent], \r\n  providers: [ {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: false}}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <p>Desenvolvido por <a href=\"https://github.com/JoaoAugustoMV?tab=repositories\" target=\"_blank\" title=\"Visite meu GitHub!\">João Augusto</a></p>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Listas de Compras</h1>\r\n\r\n<nav>\r\n    <span><a href=\"/novaLista\">Nova Lista</a></span>\r\n    <span><a href=\"/\">Listas Salvas</a></span>\r\n</nav>\r\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ProdutoService } from 'src/app/services/produto.service';\nimport { ListaIconeComponent } from '../../pages/listas-salvas/lista-icone/lista-icone.component';\nimport { Descricao } from '../../models/descricao.class';\n\n@Component({\n  selector: 'app-janela-modal',\n  templateUrl: './janela-modal.component.html',\n  styleUrls: ['./janela-modal.component.css']\n})\nexport class JanelaModalComponent implements OnInit {\n\n  @Output() eventConfirmar = new EventEmitter<boolean>()\n  constructor(public dialogRef: MatDialog,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private produtoService: ProdutoService) { }\n\n  ngOnInit(): void {\n  }\n\n  fechar(): void{\n    this.dialogRef.closeAll()\n  }\n\n  confirmar(): void{\n    this.eventConfirmar.emit(true)\n  }\n\n}\n","<h1 mat-dialog-title>Deletar Lista</h1>\n<div mat-dialog-content>\n  <!-- <p>Tem certeza que deseja deletar a lista <strong>{{ data.nomeLista }}</strong>? </p> -->\n  <p>{{ data.mensagem}} </p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"fechar()\">Cancelar</button>\n  <button mat-button (click)=\"confirmar()\" cdkFocusInitial>Confirmar</button>\n</div>\n\n<!-- \"  [mat-dialog-close]=\"nsei\" -->","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ListaDeComprasComponent } from 'src/app/pages/lista-de-compras/listaDeCompras/lista-de-compras.component';\nimport { ProdutoService } from 'src/app/services/produto.service';\nimport { SnackBarComponent } from '../snack-bar/snack-bar.component';\n\n@Component({\n  selector: 'app-salvar-lista',\n  templateUrl: './salvar-lista.component.html',\n  styleUrls: ['./salvar-lista.component.css']\n})\nexport class SalvarListaComponent implements OnInit {\n\n  @Input() apareceSalvarLista!: boolean\n  nsei = \"Nao Sei\"\n  nomeLista!: string\n    constructor(public dialogRef: MatDialogRef<ListaDeComprasComponent>, \n                @Inject(MAT_DIALOG_DATA) public data: any,\n                private produtoService: ProdutoService,\n                private snackBar: MatSnackBar,\n                private rotas: Router) {}\n  ngOnInit(): void {\n      this.nomeLista = this.data.nomeLista\n    \n    // throw new Error('Method not implemented.');\n  }\n  \n  fechar(): void{\n    this.dialogRef.close()\n  }\n  \n  salvarLista(){\n    let listasAtuais!: string[]\n    this.produtoService.retornarNomesListas().subscribe(\n      {next: (listas) => {\n        \n        listasAtuais = listas\n      }, complete: () => {\n\n       // FOR: Para informa de qual lista o produto é \n        for (let produto of this.data.lista){ // Percorre o array de Produtos\n          produto['nomeLista'] = this.nomeLista \n        }   \n\n        if(listasAtuais.includes(this.nomeLista)){ // Se lista já existe, ou seja, metodo PUT\n          this.produtoService.atualizarLista(this.nomeLista, this.data.lista).subscribe()\n          \n        } else { // Se a lista ainda não existe, ou seja metodo POST\n            this.produtoService.adicionarLista(this.nomeLista, this.data.lista).subscribe((resposta) => {\n\n            })\n        } // end else\n        this.abrirSnackBar()\n        this.rotas.navigateByUrl('/')\n      } // End:4\n\n    }) // end subscribe\n\n  } // End salvarLista\n\n  abrirSnackBar(){\n    this.snackBar.openFromComponent(SnackBarComponent, {\n      duration: 4000,\n      panelClass: 'snackBarPadrao',\n      data: { mensagem : \"Sua Lista foi Salva!\"},\n\n    })\n  }\n}","<h1 mat-dialog-title>Salvar Lista</h1>\n<div mat-dialog-content>\n  <p>Digite o nome da lista</p>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Nome</mat-label>\n    <input matInput [(ngModel)]=\"nomeLista\" [value]=\"nomeLista\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"fechar()\">Cancelar</button>\n  <button mat-button  (click)=\"salvarLista()\" [mat-dialog-close]=\"nsei\" cdkFocusInitial>Salvar Lista</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-snack-bar',\n  templateUrl: './snack-bar.component.html',\n  styleUrls: ['./snack-bar.component.css']\n})\nexport class SnackBarComponent implements OnInit {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public dados: any) { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<p>{{ this.dados.mensagem }}</p>","export class Descricao{\r\n    constructor(\r\n    public nomeLista: string,\r\n    public totalFinal: number\r\n    ){ \r\n        this.nomeLista = nomeLista\r\n        this.totalFinal = totalFinal\r\n    }\r\n}","export class Produto{\r\n    total: number;\r\n    constructor(\r\n    public nome: string,\r\n    public preco: number,\r\n    public quantidade: number,\r\n    public nomeLista?: string,\r\n    ){ \r\n        this.total = preco * quantidade\r\n    }\r\n}","import { Dialog, DialogRef } from '@angular/cdk/dialog';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Produto } from 'src/app/models/produto.class';\nimport { SalvarListaComponent } from 'src/app/components/salvar-lista/salvar-lista.component';\nimport { ProdutoService } from 'src/app/services/produto.service';\nimport { JanelaModalComponent } from 'src/app/components/janela-modal/janela-modal.component';\n\n\n\n@Component({\n  selector: 'app-lista-de-compras',\n  templateUrl: './lista-de-compras.component.html',\n  styleUrls: ['./lista-de-compras.component.css']\n})\nexport class ListaDeComprasComponent implements OnInit {\n  listaProdutos: Array<Produto> = []\n  rotaAtual!: string\n  nomeLista!: string\n\n  constructor(private dialog: MatDialog,\n              private router: Router,\n              private produtoService: ProdutoService) { \n\n  }\n\n  ngOnInit(): void {\n    this.rotaAtual = this.router.url //\n    this.nomeLista = this.rotaAtual.split(\"/\").slice(-1)[0] //\n\n    this.produtoService.retornarLista(this.nomeLista).subscribe({ \n      next:\n        lista => {\n    \n          this.listaProdutos = lista\n      }, complete:  () => {\n\n      }\n    }) // end subs\n  } // end OnInit\n  \n\n  adicionarProduto(inputNome: HTMLInputElement, inputPreco: HTMLInputElement, inputQuantidade: HTMLInputElement){\n    let nome = inputNome.value // Infere string\n    let preco = Number(inputPreco.value)\n    let quantidade = Number(inputQuantidade.value)\n    \n    let produto = new Produto(nome, preco, quantidade)\n\n    this.listaProdutos.push(produto)\n    \n    \n    // Limpar Campos\n    for(let input of arguments){\n      input.value = ''\n    }\n    inputNome.focus()\n\n  } // end addProduto\n\n\n  salvarLista(): void{  \n    this.abrirDialogSalvar()\n  }\n\n  cancelar(){\n    this.router.navigateByUrl('/')\n  }\n\n  // Abrir janela para Salvar Lista\n  abrirDialogSalvar(): void {\n    const dialogRef = this.dialog.open(SalvarListaComponent, {\n      width: '300px',\n      data: {nomeLista: this.nomeLista, lista: this.listaProdutos},\n      disableClose: true,\n      autoFocus: true,\n      hasBackdrop: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      // this.animal = result;\n    });\n  }\n\n  removerProduto(novaLista: Produto[]){ // recebe a lista da tabelaComponent com os produtos já removidos\n    console.log(\"testse\", novaLista)\n    this.listaProdutos = novaLista // Apenas atribui a lista da tabelaComponent a lista deste component\n  }\n\n  removerTodosProdutos(){\n    this.listaProdutos = []\n  }\n\n  abrirDialogRemoverTodos(){\n    const dialogRef = this.dialog.open(JanelaModalComponent,{\n      width: '350px',\n      data: {mensagem: \"Tem certeza que deseja remover todos os produtos?\"},\n      disableClose: false,\n      hasBackdrop: true\n    })\n    this.eventoConfirmarRemocao(dialogRef)\n  }\n\n  eventoConfirmarRemocao(dialogRef: MatDialogRef<JanelaModalComponent>){\n    dialogRef.componentInstance.eventConfirmar.subscribe(() =>{\n      this.removerTodosProdutos()\n      dialogRef.close()\n    })\n  }\n  \n\n}\n\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n     \r\n        <section id=\"InputsProduto\">\r\n            <mat-form-field appearance=\"fill\">  \r\n                <mat-label for=\"nomeProduto\">Nome do Produto</mat-label>\r\n                <input matInput #nomeProduto type=\"text\" id=\"nomeProduto\">\r\n            </mat-form-field>\r\n        \r\n        \r\n        \r\n            <section class=\"InputsNumeros\" >\r\n                <mat-form-field appearance=\"fill\" floatLabel=\"always\">\r\n                    <mat-label  for=\"precoProduto\">Preco</mat-label>\r\n                    <input matInput #precoProduto type=\"number\" name=\"\" id=\"precoProduto\" placeholder=\"0\">\r\n                    <span matPrefix>R&#36;  </span>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\" floatLabel=\"always\">\r\n                    <mat-label  for=\"quantidadeProduto\">Quantidade</mat-label>\r\n                    <input matInput #quantidadeProduto type=\"number\" id=\"quantidadeProduto\">\r\n                </mat-form-field>\r\n            </section>\r\n\r\n            <button mat-raised-button color=\"primary\" (click)=\"adicionarProduto(nomeProduto, precoProduto, quantidadeProduto)\" >Adicionar</button>\r\n        </section>\r\n\r\n        <!-- [nProdutos] monitora as adiçoes de produtos para atualizar o total final -->\r\n        <app-tabela-produtos  [nProdutos]=\"listaProdutos.length\" [listaProdutosTabela]=\"listaProdutos\" (eventRemoverProduto)=\"removerProduto($event)\"></app-tabela-produtos>\r\n\r\n        <section class=\"botoes\">\r\n            <button mat-raised-button color=\"warn\" type=\"submit\" (click)=\"abrirDialogRemoverTodos()\">Remover Todos</button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"salvarLista()\">Salvar Lista</button>\r\n            <button mat-raised-button color=\"basic\" type=\"submit\" (click)=\"cancelar()\">Cancelar</button>\r\n        </section>\r\n      \r\n    \r\n   \r\n\r\n</body>\r\n</html>","import { Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { Produto } from 'src/app/models/produto.class';\n\nimport * as $ from 'jquery';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { JanelaModalComponent } from 'src/app/components/janela-modal/janela-modal.component';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-tabela-produtos',\n  templateUrl: './tabela-produtos.component.html',\n  styleUrls: ['./tabela-produtos.component.css']\n})\nexport class TabelaProdutosComponent implements OnInit {\n\n  colunasExibidas = [\n    'nome',\n    'preco',\n    'quantidade',\n    'total'\n  ]\n  @Input() listaProdutosTabela: Array<Produto> = []\n  @Input() nProdutos!: number // Monitora a adiçao ou remoção de produtos da lista\n\n  @Output() eventRemoverProduto = new EventEmitter<Produto[]>()\n  \n  dataSource!: MatTableDataSource<Produto>\n\n  listaCheck: Produto[] = [] // Produtos Riscados\n  \n  constructor(private dialog: MatDialog, private router: Router) { }\n  \n  ngOnInit(): void {\n  \n    // this.verificarRotaMercado()\n  }\n  ngOnChanges(): void{\n\n    // this.verificarRotaMercado()\n    this.calcularTotal(this.listaProdutosTabela)\n    this.dataSource = new MatTableDataSource(this.listaProdutosTabela)\n\t\n    \n  }\n\n\n  calcularTotal(lista: Produto[]): number{\n   let total = 0\n    for(let produto of lista){\n      total += produto.total\n   }\n\n   return total\n  }\n\n  atualizarCheck(produtoAlterado: Produto){ // Monitora o clique no check\n    \n    if(this.listaCheck.includes(produtoAlterado)){ // Se o item estiver checkado, apos o clique devera estar uncheck\n\t\tthis.listaCheck = this.listaCheck.filter(produto => produto.nome != produtoAlterado.nome)\n    } else{ // Se o item estiver uncheck, apos o clique devera ficar check\n      this.listaCheck.push(produtoAlterado) \n    }\n\n  } // End atualizarCheck\n\n  // Atualiza tanto o total do produto na celula total, quanto na lista de Produtos\n  atualizarProduto(produtoAlterado: Produto):void{\n    \n    // Se o nome do produto tiver espaço, será adicionado mais de uma classe ex: leite condensado teria as classes: leite condensadoPreco\n    // Para garantir apenas uma classe é removido os espaços \n    let novoPrecoProduto = Number($(`.${produtoAlterado.nome}Preco`.replaceAll(' ', '')).val()) \n    let novaQuantidadeProduto = Number($(`.${produtoAlterado.nome}Quantidade`.replaceAll(' ', '')).val())\n   \n    produtoAlterado.total = novoPrecoProduto * novaQuantidadeProduto // Atualiza a celula total do produto\n\n    this.listaProdutosTabela.forEach( (produto: Produto) =>{ // Atualiza a lista\n      if(produto.nome === produtoAlterado.nome){\n        produto.preco = novoPrecoProduto\n        produto.quantidade = novaQuantidadeProduto\n        produto.total = produto.preco * produto.quantidade\n      }\n    }) // end forEach\n    \n    this.dataSource = new MatTableDataSource(this.listaProdutosTabela)\n\n\n  } // end atualizaProduto\n\n\n  cliqueRemoverProduto(produtoParaRemover: Produto){\n    this.abrirDialog(produtoParaRemover)\n    \n    \n  }\n  \n  abrirDialog(produto: Produto){\n    const dialogRef = this.dialog.open(JanelaModalComponent, {\n      width: '350px',\n      data: {mensagem: `Tem certeza que deseja remover ${produto.nome}?`}, // Dados que irão para o component\n      disableClose: false,\n      hasBackdrop: true\n    })\n    this.eventoConfirmar(dialogRef, produto); // Monitora o clique na JanelaModalComponent\n  }\n  \n  eventoConfirmar(dialogRef: MatDialogRef<JanelaModalComponent>, produtoParaRemover: Produto){\n    dialogRef.componentInstance.eventConfirmar.subscribe((teste) => { // Ao clicar em Confirmar na JanelaModalComponent\n      this.removerProduto(produtoParaRemover)\n      dialogRef.close()\n    })\n\n  }\n\n  removerProduto(produtoParaRemover: Produto){\n    console.log('remover', this.listaProdutosTabela)\n    this.listaProdutosTabela = this.listaProdutosTabela.filter((produto) => produto.nome !== produtoParaRemover.nome)\n    const novaLista = this.listaProdutosTabela\n    console.log('removerD', novaLista)\n    this.eventRemoverProduto.emit(novaLista)\n  }\n   \n  verificarRotaMercado(){\n    if(this.router.url.includes('modoMercado')){\n      return true\n    } \n    return false\n  }\n\n\n}\n\n\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 demo-table\">\n    <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef >Nome</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.nome }} </td>\n        <td  mat-footer-cell *matFooterCellDef> TOTAL </td>\n      </ng-container>\n      \n      <ng-container matColumnDef=\"preco\">\n        <th mat-header-cell *matHeaderCellDef>Preco</th>\n        \n        <td mat-cell *matCellDef=\"let element\"> \n          <input  type=\"number\" name=\"\" class=\"{{ element.nome.replaceAll(' ', '') }}Preco\" [value]=\"element.preco\" (change)=\"atualizarProduto(element)\"> \n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n      \n      <ng-container matColumnDef=\"quantidade\">\n        <th mat-header-cell *matHeaderCellDef>Quantidade</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <input  type=\"number\" name=\"\" class=\"{{ element.nome.replaceAll(' ', '') }}Quantidade\" [value]=\"element.quantidade\" (change)=\"atualizarProduto(element)\">\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n    <ng-container matColumnDef=\"total\">\n        <th mat-header-cell *matHeaderCellDef>Total</th>\n        <td class=\"colunaTotal\" mat-cell *matCellDef=\"let element\"><p> {{ element.total }}</p>\n          <button mat-raised-button color=\"warn\" title=\"Remover Produto\" (click)=\"cliqueRemoverProduto(element)\" >\n            <mat-icon>delete</mat-icon>\n          </button> \n          \n          <section *ngIf=\"verificarRotaMercado()\" class=\"btnsCheckbox\">\n            <mat-checkbox (change)=\"atualizarCheck(element)\">OK</mat-checkbox>\n          </section>\n        </td>\n        <td mat-footer-cell *matFooterCellDef>{{ calcularTotal(this.listaProdutosTabela) }}</td>\n      </ng-container>\n\n      <!-- Footer para o Modo Mercado -->\n      <ng-container matColumnDef=\"TotalRiscados\" >\n        <td mat-footer-cell *matFooterCellDef colspan=\"3\"> TOTAL ATUAL </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"TotalRiscadosNum\">\n        <td mat-footer-cell *matFooterCellDef> {{ calcularTotal(this.listaCheck)}} </td>\n      </ng-container>\n      <!-- End Footer para o Modo Mercado --> \n\n      <ng-container matColumnDef=\"TotalRestante\">\n        <td mat-footer-cell *matFooterCellDef colspan=\"3\"> TOTAL RESTANTE </td>\n      </ng-container>\n      \n      <ng-container matColumnDef=\"TotalRestanteNum\">\n        <td mat-footer-cell *matFooterCellDef> {{ calcularTotal(this.listaProdutosTabela) - calcularTotal(this.listaCheck) }} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"colunasExibidas\"></tr>  <!-- Referencias do Header -->\n      <tr mat-row *matRowDef=\"let linha; columns: colunasExibidas\"></tr> <!-- Referencias das Linhas-->\n      <tr mat-footer-row *matFooterRowDef=\"['TotalRiscados', 'TotalRiscadosNum']\" [ngClass]=\"{footerTotalRiscados: !verificarRotaMercado()}\" ></tr> <!-- Referencias do Footer TotalRiscados -->\n      <tr mat-footer-row *matFooterRowDef=\"['TotalRestante', 'TotalRestanteNum']\" [ngClass]=\"{footerTotalRiscados: !verificarRotaMercado()}\" ></tr>\n      <tr mat-footer-row *matFooterRowDef=\"colunasExibidas\"></tr> <!-- Referencias do Footer TotalFinal -->\n\n</table>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { ListaDeComprasComponent } from 'src/app/pages/lista-de-compras/listaDeCompras/lista-de-compras.component';\nimport { ProdutoService } from 'src/app/services/produto.service';\nimport { JanelaModalComponent } from '../../../components/janela-modal/janela-modal.component';\nimport { Descricao } from '../../../models/descricao.class';\nimport { SnackBarComponent } from '../../../components/snack-bar/snack-bar.component';\n\n@Component({\n  selector: 'app-lista-icone',\n  templateUrl: './lista-icone.component.html',\n  styleUrls: ['./lista-icone.component.css']\n})\nexport class ListaIconeComponent implements OnInit{\n\n  \n  @Input() nDescricoes!: number\n  @Input() descricao!: Descricao\n\n  \n  @Output() eventDescricoes = new EventEmitter<string>()\n\n  constructor(private produtoService: ProdutoService,\n              private dialog: MatDialog,\n              private snackBar: MatSnackBar,\n              private router: Router) { \n\n    // this.matIconRegistry.addSvgIcon('iconeDeletar', \n    //   this.domSanitizer.bypassSecurityTrustResourceUrl('/assets/icons/icons8-trash-150.svg'))\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  editarLista(){\n    const urlEditar = \"editarLista/\"\n    this.router.navigateByUrl(urlEditar + this.descricao.nomeLista)\n    \n  }\n  // Abrir MatDialogo\n  cliqueEmRemover(){\n    const dialogRef = this.dialog.open(JanelaModalComponent, {\n      width: '300px',\n      data: {mensagem: `Tem certeza que deseja excluir a lista ${this.descricao.nomeLista}`},\n      disableClose: false,\n      hasBackdrop: true\n    })\n    this.eventoConfirmar(dialogRef);\n  }\n  \n  // Monitora o eventConfirmar(clique em Confirmar na Janela)\n  eventoConfirmar(dialogRef: MatDialogRef<JanelaModalComponent>) {\n    dialogRef.componentInstance.eventConfirmar.subscribe(teste => { // subscribe ao apertar \n      this.deletarLista()\n      dialogRef.close() // Fechar Janela\n      this.snackBar.openFromComponent(SnackBarComponent, // Snack Bar para informar qual lista foi deletada\n        {\n          duration: 4000,\n          panelClass: 'snackBarPadrao', // Classe CSS\n          data: { mensagem: `A lista ${this.descricao.nomeLista} foi apagada` }\n        } \n        ) // End:4 eventoConfirmar()\n      }) // End:3 subscribe()\n    } // End:2 eventoConfirmar()\n    \n    // DELETE Lista\n    deletarLista(){\n      this.produtoService.deletarLista(this.descricao.nomeLista).subscribe()\n      this.eventDescricoes.emit(this.descricao.nomeLista) // Emite para o Componente Pai a mudança\n      \n    }\n\n\n    entrarModoMercado(descricao: Descricao){\n      console.log(descricao)\n      let urlModoMercado = '/modoMercado/'\n      this.router.navigateByUrl(urlModoMercado + descricao.nomeLista)\n    }\n} // End:1 componente\n\n","<mat-card class=\"sera\">\n    <mat-card-header>\n        <mat-card-title> {{ descricao.nomeLista }}</mat-card-title>\n        <mat-card-subtitle>Total: {{descricao.totalFinal }}</mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n       \n        <!-- <button mat-icon-button >\n            <mat-icon svgIcon=\"iconeDeletar\"></mat-icon>\n        </button> -->\n        <div class=\"btns\">\n            <button mat-raised-button color=\"warn\" title=\"Deletar Lista\" (click)=\"cliqueEmRemover()\">\n                <mat-icon>remove_shopping_cart</mat-icon>\n            </button>\n            \n            <button mat-raised-button color=\"primary\" id=\"btn_modo_mercado\" title=\"Entrar no Modo Mercado\" (click)=\"entrarModoMercado(descricao)\">\n                <mat-icon>local_grocery_store</mat-icon>\n            </button>\n            <button mat-raised-button color=\"accent\" title=\"Editar Lista\" (click)=\"editarLista()\">\n                <mat-icon>edit</mat-icon>\n            </button>\n\n        </div>\n\n       \n\n    </mat-card-content>\n</mat-card>","import { Component, OnChanges, OnInit, } from '@angular/core';\nimport { Descricao } from 'src/app/models/descricao.class';\nimport { ListaIconeService } from 'src/app/services/lista-icone.service';\nimport { ProdutoService } from 'src/app/services/produto.service';\n\n@Component({\n  selector: 'app-listas-salvas',\n  templateUrl: './listas-salvas.component.html',\n  styleUrls: ['./listas-salvas.component.css']\n})\nexport class ListasSalvasComponent implements OnInit, OnChanges {\n\n  todasListas: string[] = [] // Apenas os nomes\n  descricoes: Descricao[] = [] // nomes das listas e seu total respectivo\n  constructor(private produtoService: ProdutoService, ) {\n  }\n  \n  ngOnInit(): void {\n    this.receberNomesListas()\n    \n  }\n  ngOnChanges(){\n    this.receberNomesListas()\n  }\n\n  atualizarDescricoes(nomeLista: string){\n\n    let descricoesRestantes = this.descricoes.filter((lista => {\n      if(lista.nomeLista != nomeLista){\n        return lista\n      }\n      else{\n        return false\n      }\n    }))\n    this.descricoes = descricoesRestantes\n  }\n\n  // Retornar apenas os nomes da lista\n  receberNomesListas(): void{\n    this.produtoService.retornarNomesListas().subscribe({\n      next: nomeLista => {     \n        this.todasListas = nomeLista     // Array dos nomes   \n      }, // end next \n\n      complete: () => { // \n        for(let nomeLista of this.todasListas){\n          this.descreverLista(nomeLista)\n        } // end complete\n      }\n    }) // end subscribe\n    \n  } // End receberNomesListas\n\n\n  // Retorne o nomeLista e o total final da lista\n  descreverLista(nomeLista: string): void{ \n\n    let totalFinal = 0\n    this.produtoService.retornarLista(nomeLista).subscribe({\n      next: lista => {\n        lista.forEach((produto) => {\n          totalFinal += produto.total\n        }) // end forEach\n        \n    }, \n      complete: () => { // Só é adicionada APOS a Promisse ser cumprida,\n        this.descricoes.push( new Descricao(nomeLista, totalFinal)) // \n      }}) // end subscribe\n\n  } // end descreverLista()\n} // end component\n","<!-- <button (click)=\"mostrarDescricoes()\">Mostrar</button> -->\n    <section *ngFor=\"let descricao of descricoes\" >\n        <app-lista-icone (eventDescricoes)=\"atualizarDescricoes(descricao.nomeLista)\" [descricao]=\"descricao\"></app-lista-icone>\n    \n    </section>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Produto } from 'src/app/models/produto.class';\nimport { ProdutoService } from 'src/app/services/produto.service';\n\n@Component({\n  selector: 'app-modo-mercado',\n  templateUrl: './modo-mercado.component.html',\n  styleUrls: ['./modo-mercado.component.css']\n})\nexport class ModoMercadoComponent implements OnInit {\n  rotaAtual!: string\n  nomeLista!: string\n  listaProdutos!: Produto[]\n  constructor(private router: Router, private produtoService: ProdutoService) { }\n\n  ngOnInit(): void {\n    this.rotaAtual = this.router.url //\n    this.nomeLista = this.rotaAtual.split(\"/\").slice(-1)[0] //\n\n    this.produtoService.retornarLista(this.nomeLista).subscribe({ \n      next:\n        lista => {\n    \n          this.listaProdutos = lista\n      }, complete:  () => {\n \n      }\n    }) // end subs\n  }\n\n  removerProduto(novaLista: Produto[]){\n    this.listaProdutos = novaLista\n  }\n\n}\n","\n<app-tabela-produtos  [nProdutos]=\"listaProdutos.length\" [listaProdutosTabela]=\"listaProdutos\" (eventRemoverProduto)=\"removerProduto($event)\"></app-tabela-produtos>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Produto } from '../models/produto.class';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n\n  \n  private url = 'http://localhost:8080/api/listas/'\n  private urlProdutos = 'http://localhost:8080/produtos/'\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n\n  // GET: Retornar os nomes das lista\n  retornarNomesListas(): Observable<string[]>{\n    return this.httpClient.get<string[]>(this.url)\n  }\n\n  // GET By nomeLista: Filtra a tabela pela coluna nome_lista\n  retornarLista(nomeLista: string): Observable<Produto[]>{\n    return this.httpClient.get<Produto[]>(this.url + nomeLista);\n  }\n\n  //POST: Adicionar nova Lista\n  adicionarLista(nomeLista: string, produtos: Produto[]): Observable<Produto[]>{ //  \n    const url = this.url + nomeLista\n\n\n\n\n    return this.httpClient.post<Produto[]>(url, produtos)\n  }\n\n  // PUT: Atualizar lista\n  atualizarLista(nomeLista: string,  produtos: Produto[]): Observable<Produto[]>{\n  \n    return this.httpClient.put<Produto[]>((this.url + nomeLista), produtos)\n  }\n  \n  // DELETE: Apagar todas ocorrencias de nomeLista\n  deletarLista(nomeLista: string): Observable<Produto[]>{\n    return this.httpClient.delete<Produto[]>(this.url + nomeLista)\n  }\n\n    \n\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}